// $Revision$

digraph G {

    graph [];
    node  [shape=Mrecord];
    edge  [];

    "server_start"        [label="{Server Start|<listensocket>Listen Socket}"];
    "accept_socket"       [label="{<in>Accept Socket|{<success>Success|<fail>Fail}}"];
    "connection_phase"    [label="{<in>Connection Phase|Send Protocol Requirements|{<comply>Comply|<fail>Fail}}"];
    "require_auth"        [label="{<in>Does server require auth?|{<no>No|<yes>Yes}}"];
    "authorize"           [label="{<in>Authorize|Sends Salt|{<pass>Pass|<reject>Reject|<fail>Fail}}"]
    "command_phase"       [label="{<in>Command Phase|Search for Commands|{<nocommands>No Commands|<command>Command}}"];
    "issue_command"       [label="{<in>Issue Command|<reconnectto>Reconnect To|<disconnect>Disconnect, allow reconnect|<disconnectpr>Disconnect with prejudice|<upgrade>Upgrade required}"];
    "negotiation_phase"   [label="{<in>Negotiation Phase}"]
    "immediate_reconnect" [label="Immediate Reconnect"]

    server_start:listensocket     -> accept_socket:in               [];

    accept_socket:success         -> connection_phase:in            [];
    accept_socket:fail            -> close_connection               [];

    connection_phase:comply       -> require_auth:in                [];
    connection_phase:fail         -> close_connection_message       [];

    require_auth:yes              -> authorize:in                   [];
    require_auth:no               -> negotiation_phase:in           [];

    close_connection_message      -> close_connection               [];

    authorize:pass                -> command_phase:in               [];
    authorize:fail                -> close_connection               [];
    authorize:reject              -> close_connection_message       [];

    command_phase:command         -> issue_command:in               [];

    issue_command:reconnectto:w   -> immediate_reconnect            [];
    issue_command:disconnect:e    -> close_connection_message       [];
    issue_command:disconnectpr:e  -> close_connection_message       [];
    issue_command:upgrade:s       -> close_connection               [];

    immediate_reconnect           -> close_connection               [];

    command_phase:nocommands      -> negotiation_phase:in           [];

    demand_phase -> look_for_demands -> no_more_demands -> transit_phase




}