// $Revision$

digraph G {

    graph [];
    node  [shape=Mrecord];
    edge  [];

    "server_start"     [label="{Server Start|<listensocket>Listen Socket}"];
    "accept_socket"    [label="{<in>Accept Socket|{<success>Success|<fail>Fail}}"];
    "connection_phase" [label="{<in>Connection Phase|Send Protocol Requirements|{<comply>Comply|<fail>Fail}}"];
    "command_phase"    [label="{<in>Command Phase|Search for Commands|{<nocommands>No Commands|<command>Command}}"];
    "issue_command"    [label="{<in>Issue Command|<auth>Authorize|<reconnectto>Reconnect To|<disconnect>Disconnect, allow reconnect|<disconnectpr>Disconnect with prejudice|<upgrade>Upgrade required}"];
    "authorize"        [label="{<in>Authorize|Sends Salt|{<pass>Pass|<fail>Fail|<reject>Reject}}"]

    server_start:listensocket     -> accept_socket:in               [];

    accept_socket:success         -> connection_phase:in            [];
    accept_socket:fail            -> close_connection               [];

    connection_phase:comply       -> command_phase:in               [];
    connection_phase:fail         -> close_connection_message       [];

    close_connection_message      -> close_connection               [];

    command_phase:command         -> issue_command:in               [];

    issue_command:f1:w            -> authorize:in                   [];

    issue_command:reconnectto:e   -> close_connection_reconnect     [];
    issue_command:disconnect:e    -> close_connection               [];
    issue_command:disconnectpr:e  -> close_connection               [];
    issue_command:upgrade:e       -> close_connection               [];

    close_connection_reconnect    -> close_connection               [];

    authorize:reject              -> close_connection               [];


    accept_or_deny -> accept_connection -> demand_phase

    demand_phase -> look_for_demands -> no_more_demands -> transit_phase

    look_for_demands -> demand_found -> make_demand -> was_demand_satisfied

    was_demand_satisfied -> no_demand_was_not_satisfied -> close_connection

    was_demand_satisfied -> yes_demand_was_satisfied
      yes_demand_was_satisfied -> look_for_demands [constraint=false]



    accept_or_deny -> deny -> close_connection




}