// $Revision$

digraph G {

    graph [bgcolor="#ccddee" style=filled pad=1];
    node  [fillcolor=white style=filled shape=Mrecord fontname="candara"];
    edge  [];

    "server_start"             [label="{Server Start|<listensocket>Listen Socket}"        fillcolor=khaki1 style=filled];
    "accept_socket"            [label="{<in>Accept Socket|{<success>Success|<fail>Fail}}" fillcolor=khaki1 style=filled];
    "connection_phase"         [label="{<in>Connection Phase|Send Protocol Requirements|{<comply>Comply|<fail>Fail}}"];
    "require_auth"             [label="{<in>Does server require auth?|{<no>No|<yes>Yes}}"];
    "authorize"                [label="{<in>Authorize|Sends Salt|{<pass>Pass|<reject>Reject|<fail>Fail}}"];
    "command_phase"            [label="{<in>Command Phase|Search for Commands|{<nocommands>No Commands|<command>Command}}"];
    "issue_command"            [label="{<in>Issue Command|<reconnectto>Reconnect To|<disconnect>Disconnect, allow reconnect|<disconnectpr>Disconnect with prejudice|<upgrade>Upgrade required}"];
    "negotiation_phase"        [label="{<in>Negotiation Phase|<wait>Wait for bridge request|{<bad>Not supported|<good>Supported|<none>None}}"];
    "protocol_require_auth"    [label="{<in>Does protocol require auth?|{<no>No|<yes>Yes}}"];
    "protocol_authorize"       [label="{<in>Protocol Authorize|Sends Salt|{<pass>Pass|<fail>Fail|<reject>Reject}}"];
    "transit_phase"            [label="{<in>Transit Phase|Rules change to transit mode}"];
    "immediate_reconnect"      [label="Immediate Reconnect"];
    "close_connection_message" [label="{Provide message why|Connection Closed}"];
    "close_connection"         [label="Close this\nconnection" shape=ellipse fillcolor=lightpink style=filled]
    "start_transit_phase"      [label="Switch to\ntransit mode" shape=ellipse fillcolor=darkolivegreen1 style=filled]

    server_start:listensocket     -> accept_socket:in               [penwidth=5];

    accept_socket:success         -> connection_phase:in            [penwidth=5];
    accept_socket:fail            -> close_connection               [];

    connection_phase:comply       -> require_auth:in                [penwidth=5];
    connection_phase:fail         -> close_connection_message       [];

    require_auth:yes              -> authorize:in                   [];
    require_auth:no               -> command_phase:in               [penwidth=5];

    close_connection_message      -> close_connection               [];

    authorize:pass                -> command_phase:in               [];
    authorize:fail                -> close_connection               [];
    authorize:reject              -> close_connection_message       [];

    command_phase:command         -> issue_command:in               [];

    issue_command:reconnectto:w   -> immediate_reconnect            [];
    issue_command:disconnect:e    -> close_connection_message       [];
    issue_command:disconnectpr:e  -> close_connection_message       [];
    issue_command:upgrade:s       -> close_connection               [];

    immediate_reconnect           -> close_connection               [];

    command_phase:nocommands      -> negotiation_phase:in           [penwidth=5];

    negotiation_phase:bad:sw      -> negotiation_phase:wait:w       [constraint=false];
    negotiation_phase:none:s      -> close_connection_message       [];
    negotiation_phase:good:s      -> protocol_require_auth:in:ne    [penwidth=5];

    protocol_require_auth:yes     -> protocol_authorize:in          [penwidth=5];
    protocol_require_auth:no      -> transit_phase:in               [];

    protocol_authorize:pass       -> transit_phase:in               [penwidth=5];
    protocol_authorize:fail       -> close_connection               [];
    protocol_authorize:reject     -> close_connection_message       [];

    transit_phase                 -> start_transit_phase            [penwidth=5];



}